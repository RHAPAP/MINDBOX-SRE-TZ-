apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-deployment
  labels:
    app: web-app
spec:
  # Количество подов должно быть равно четырем, т.к. согласно результату нагрузочного теста этого достаточно для работы в пиковые часы
  replicas: 4

  # Решил выбрать RollingUpdate, т.к. данная стратегия развертывания безопасно заменяет поды по одному
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # допускается 1 дополнительный под во время обновления
      maxUnavailable: 0  # во время работы не должно быть недоступных подов

  # все поды создаются параллельно, для более быстрого восстановления подов при сбоях
  podManagementPolicy: Parallel

  template:
    metadata:
      labels:
        app: web-app
    spec:
      # Распределение не более одного пода на зону
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: failure-domain.beta.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelectorPitch: {}

      # Используем все доступные ноды в мультизональном кластере
      nodeSelector: {}
      
      resources:
        requests:
          cpu: "0.2"     # 20% мощности процессора для старта и работы прилоэения
          memory: "128Mi" # Постоянный расход памяти
        limits:
          cpu: "0.5"      # 50% для пиков при старте
          memory: "256Mi" # Хоть и потребление памяти всегда ровное, пусть на всякий пожарный будет буфер на случайные пики

      # под считается готовым работать только после 10 секунд старта
      readinessProbe:
        httpGet:
          path: /health
          port: 8080
        initialDelaySeconds: 10   
        periodSeconds: 5    
        timeoutSeconds: 3       
        successThreshold: 1
        failureThreshold: 3  

      # проверяем, не склеил ли ласты наш под
      livenessProbe:
        httpGet:
          path: /health
          port: 8080
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3

      containers:
      - name: web-app
        image: web-app-image:latest
        ports:
        - containerPort: 8080
          name: http